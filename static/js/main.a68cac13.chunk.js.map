{"version":3,"sources":["Components/Profile/Profile.module.css","Components/Statistics/Statistics.module.css","Components/FriendListItem/FriendListItem.module.css","Components/TransactionHistory/TransactionHistory.module.css","Components/FriendList/FriendList.module.css","Components/Profile/user.png","Components/Profile/Profile.js","Components/Statistics/Statistics.js","Components/FriendListItem/user.png","Components/FriendListItem/FriendListItem.js","Components/FriendList/FriendList.js","Components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","imageDefault","stats","className","s","profile","description","src","alt","list","item","label","quantity","followers","views","likes","Statistics","title","statistics","map","stat","percentage","id","FriendListItem","isOnline","status","style","backgroundColor","width","FriendList","friends","friend","TransactionHistory","items","table","head","line","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a68cac13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3U8Ig\",\"description\":\"Profile_description__34qN7\",\"avatar\":\"Profile_avatar__3BHOR\",\"name\":\"Profile_name__3KLz0\",\"tag\":\"Profile_tag__1GeDT\",\"location\":\"Profile_location__WMfYV\",\"list\":\"Profile_list__2QlJt\",\"stats\":\"Profile_stats__MqaL6\",\"label\":\"Profile_label__3mOQn\",\"item\":\"Profile_item__2kefx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3kwnE\",\"title\":\"Statistics_title__LSilG\",\"list\":\"Statistics_list__2kdSz\",\"label\":\"Statistics_label__1Jh86\",\"item\":\"Statistics_item__24y-W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__32eHM\",\"status\":\"FriendListItem_status__2evf5\",\"name\":\"FriendListItem_name__sxl5k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__252Km\",\"head\":\"TransactionHistory_head__2spJ9\",\"line\":\"TransactionHistory_line__1rhz5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendList_list__3Fmh8\"};","export default __webpack_public_path__ + \"static/media/user.26853856.png\";","import PropTypes from 'prop-types';\r\nimport s from './Profile.module.css';\r\nimport imageDefault from './user.png' \r\n\r\n\r\nfunction Profile({ name, tag, location, avatar = imageDefault , stats }) {\r\n  \r\n  return <div className={s.profile}>\r\n  <div className={s.description}>\r\n        <img\r\n          src={avatar}\r\n          alt={name}\r\n          className={s.avatar}\r\n    />\r\n        <p className={s.name}>{name}</p>\r\n        <p className={s.tag}>@{tag}</p>\r\n        <p className={s.location}>{location}</p>\r\n  </div>\r\n        <div className={s.list}>\r\n      <ul className={s.stats}>\r\n    <li className={s.item}>\r\n          <span className={s.label}>Followers</span>\r\n          <span className={s.quantity}>{stats.followers}</span>\r\n    </li>\r\n    <li className={s.item}>\r\n          <span className={s.label}>Views</span>\r\n          <span className={s.quantity}>{stats.views}</span>\r\n    </li>\r\n    <li className={s.item}>\r\n      <span className={s.label}>Likes</span>\r\n       <span className={s.quantity}>{stats.likes}</span>\r\n    </li>\r\n              </ul>\r\n              </div>\r\n</div>\r\n}\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired ,\r\n    tag:  PropTypes.string ,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string,\r\n    stats: PropTypes.object.isRequired\r\n}\r\nexport default Profile;","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nfunction Statistics({title , stats}) {\r\n    return < section className={s.statistics} >\r\n        {\r\n         {title} ?  <h2 className={s.title} > {title} </ h2 > : null\r\n        }\r\n       \r\n\r\n        < ul className={s.list} >\r\n            {stats.map(stat =>( <li key={stat.id} className={s.item } > \r\n                <span className={s.label} >{stat.label} </span >\r\n                <span className={s.percentage} > {stat.percentage }</span >\r\n            </li > ) )}\r\n                     \r\n  </ul > \r\n</ section >\r\n}\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats:PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\nexport default Statistics;","export default __webpack_public_path__ + \"static/media/user.26853856.png\";","import PropTypes from 'prop-types';\r\nimport s from './FriendListItem.module.css';\r\nimport imageDefault from './user.png' \r\n\r\nfunction FriendListItem({ avatar=imageDefault, name, isOnline='false' }) {\r\n    return < li  className={s.item} >\r\n        < span className={s.status} style={{ backgroundColor : isOnline ? 'green' : 'red'}}  > </ span >\r\n        < img className={s.avatar} src = {avatar} alt = {name} width = \" 48 \" />\r\n        < p className={s.name} > {name} </ p >\r\n</ li >\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool\r\n    \r\n}\r\nexport default FriendListItem;","import FriendListItem from '../FriendListItem/FriendListItem';\r\nimport s from './FriendList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FriendList({friends}) {\r\n    return <ul className={s.list}>\r\n        {friends.map(friend => (<FriendListItem avatar={ friend.avatar} name={friend.name} isOnline={friend.isOnline} key={friend.id} />))} \r\n          </ul>\r\n}\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default FriendList;\r\n\r\n ","import s from './TransactionHistory.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TransactionHistory({ items }) {\r\n    return  < table  className =  {s.table} > \r\n  < thead className={s.head} > \r\n    < tr > \r\n      < th > Type </ th > \r\n      < th > Amount </ th > \r\n      < th > Currency </ th > \r\n    </ tr > \r\n  </ thead >\r\n\r\n        < tbody >\r\n            {items.map(item => (\r\n                < tr key={item.id} className={s.line} >\r\n                    < td > {item.type} </ td > \r\n                    < td > {item.amount} </ td > \r\n                    <td>   {item.currency} </td > \r\n            </ tr >\r\n            ))}\r\n   \r\n    \r\n  </ tbody > \r\n</ table >\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\nexport default TransactionHistory;","import Profile from './Components/Profile/Profile';\nimport Statistics from './Components/Statistics/Statistics';\nimport user from './user.json';\nimport statisticalData from './statistical-data.json';\nimport friends from './friends.json';\nimport FriendList from './Components/FriendList/FriendList';\nimport transactions from './transactions.json';\nimport TransactionHistory from './Components/TransactionHistory/TransactionHistory';\nfunction App() {\n  return (\n    <>\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n      < Statistics title={'Upload stats'} stats={statisticalData} /> ;\n      < Statistics stats={statisticalData} /> ;\n      <FriendList friends={friends} /> ;\n      <TransactionHistory items={ transactions }/>\n\n      </>\n      );\n      \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}